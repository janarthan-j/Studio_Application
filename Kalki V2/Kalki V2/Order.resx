<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAAUFJREFUWEfdl40NwiAQhTuCIziCIziCIziCIziCIziCIziCIziCG9T7kl5C4JFQ
        BJr4ki+V44Cn/BSneZ43RQZHIoMjkUHBwfgYtTobqt8iA3uDwR/GtYKbgU5G0n8SEBwNxFPVl4Awk9Ql
        gQCcP42XgXhSVvDr7AzVD6BVBi4GUoPFvA2EwZwJtMoAyUjVxXguyplA3Q2w0pEygbob4HPOBOpmwNcL
        bYDBUWgCdTMAd0PJty7qaiAmPjtQtQFOMLX9cnBsNzVAh5RLYd6bGqihuQE6KsXzkZdRtQHf26Uiv6kB
        oKNSPB95Gf1kYC1NDWy+CzY/B2r4LwNMgRIXVS6scVtwA7wRgVymJslNAguhARYV5Rhew3E7JzTg60Ll
        DZuCLDJoxJeMtfj9IPvNHRlc8Gt5Ldl/QyEyOBIZHMc8fQHvA938Io/3qAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAAX1JREFUWEfVl4FRhDAQRa8ES7AES7AES7AES7AES7AUS7AES7AD3JfhM2H9uQAH
        OO7MG8iyyf+EvTvuMgzDn2KTZ2KTZ2KThrvgPfjYwEPg1izYZALxz4Dg6ERaUP8d3Adu7a6BWpx4DFxd
        C+qJ5jybHKnFn8fjaQayODlirQFgPn3AXDFdrwtFfuavwVsZdRqqgXbvK9C6L0G5nosBhy60E2uQOKFG
        1E2VmrpYyMBsqzZQ3zmBMCYYH25A4ojySOudIJ6CUpsnwq0Gsjg5jtoJrk/100mFM4Bjtq2HmjWLMyZm
        4jAbjDgDWmBJLBaHX4nAGejR2var4uCSaw1sFgeXXGNgifguBlwTLmm47s24pJukRXNcE2+tNcMlu5MC
        fab1ne7E4RAD/CARvGgQmHDicIgBBAn6QiYI12y7GUBUzZf7ARNOHHYzkEV538NM7/1gNwNb+d8GeO6c
        34IalnOnZQ0Af0L2CtZyGgWbHMl3sxW39oRNnolNnsdw+QF1/tOiKm6/iQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAARhJREFUWEftlg0NwjAQhScBCUhAAhKQgAQkIAEpSEACEpCAg3IvuSZt967rz9IF
        wiVflrzdvb50W7PJObcpVBwJFUdCxYCb8KjkLuwE5jeDigoWfwtsEYungMK1KAQVFW/K7lkcBV9FIaio
        9AS4CNi9xRBUVHoC4HoQFkNQUWkJgIX8exAWXkzWv3oAgBDYAQ8CmT5UVFoDpGR9qKikgyfhWgh6LZ8I
        KirpIHu2VqHX8omgopIdrOB3Amz+CDZ/CVtZLcBeCA+YHOi1fCKoqKSDL6G00Gv5RFBRSQc334FWVgtg
        /Z6dhXAuxfexe98VoJV/gK4AONPZZ1YDPJoC+J/K3oIHvNga2QCg5vCxCA+lGVQcCRXH4aYPZ86yjsd9
        MkgAAAAASUVORK5CYII=
</value>
  </data>
</root>